**********************************************************************************
INSTALL GNS3 Network simulation tool
**********************************************************************************
	sudo add-apt-repository ppa:gns3/ppa
	sudo apt update
	sudo apt-get install dynamips gns3

	add routers: edit/preferences/dynamips/iosrouters/(scroll down)/new/..select bin
	from ios bin folder stored on netzwerktechnik
**********************************************************************************
INSTALL MySQL
**********************************************************************************
	sudo apt-get update

	INSTALL MySQL Workbench:
	$ sudo apt install mysql-workbench
	...to run type: mysql-workbench

	INSTALL MySQL Server:
	sudo apt update
	sudo apt install mysql-server
	...installs mysql  Ver 14.14 Distrib 5.7.2

	LOG IN:
	sudo mysql -u root -p
	(password in password manager)
	CREATE LOCAL USER:
	GRANT ALL PRIVILEGES ON *.* TO 'realslimshady'@'localhost' IDENTIFIED BY 'PASSWORD';
	...the PASSWORD is stored in the password manager
	...log out with \q
	LOG IN AS LOCAL USER:
	$ mysql -u realslimshady -p
	$ CREATE DATABASE KinoDB;
	$ USE KinoDB;
	START mysql-workbench
	...change user of "LOCAL INSTANCE 3306" to realslimshady
	...works!
**********************************************************************************
ARDUINO STYLE GUIDE
**********************************************************************************
	NAMING:
	PINS:       const byte THIS_IS_A_PIN
						  instead of "PIN" there can also be VALVE, MOTOR, BUTTON, RELAY... at the end
	CONSTANTS:  THIS_IS_A_CONSTANT
	FUNCTIONS:  ThisIsAFunctionName
	VARIABLES:  thisIsALocalOrGlobalVariable

	Put a space between comment and //
	No space before uncommented code or *****starlines
	...prefer local variables to global ones if possible
	FORMATER SETTINGS:
		K&R style
		Indentation "Spaces only"
		2 Spaces (Tab Size)
		4 Spaces" for wrapped lines
		Line wrapping after 100 columns
***********************************************************************************
ADD EXISTING GITHUB PROJECT TO ECLIPSE:
***********************************************************************************
	USE ECLIPSE IMPORT>GIT>SMARTIMPORT
	
	EDIT A LIBRARY IN ECLIPSE-ARDUINO (SLOEBER)
	Create a folder containing an ino with example code in the library
	Create a new Project in eclipse in the default Workspace
	As project name use the same as for the exampl code.
	Import  a link to the example code using new\advanced\link to system...
	Now Example code and library can be edited.
***********************************************************************************
STORE DOTFILES VIA GIT:
***********************************************************************************
	FROM TUTORIAL: https://www.atlassian.com/git/tutorials/dotfiles
	CREATE A BARE REPOSITORY:
	create folder ~/git/dotfiles
	$ git init --bare ~/git/dotfiles

	CREATE ALIAS "dotgit" TO INTERACT WITH THE REPOSIORY:
	$ alias dotgit="/usr/bin/git --git-dir=$HOME/GIT/dotfiles/ --work-tree=$HOME"

	$ dotgit config --local status.showUntrackedFiles no

	USE THE ALIAS "config" LIKE USALLY "git" IS USED: (examples)
	dotgit status
	dotgit add .vimrc
	dotgit commit -a

	PUSH TO GITHUB:
	...set origin:
	$ dotgit remote add origin https://github.com/chischte/dotfiles.git
	...verify remote origin:
	$ dotgit remote -v
	...push files
	$ dotgit push origin master
	...enter username and password
***********************************************************************************
INSTALL DOTFILES ONTO A NEW SYSTEM:
***********************************************************************************
	FROM TUTORIAL: https://www.atlassian.com/git/tutorials/dotfiles
	ADD ALIAS TO .bashrc:
	alias dotgit="/usr/bin/git --git-dir=$HOME/GIT/dotfiles/ --work-tree=$HOME"
	IGNORE THE SOURCEFOLDER ITSELF:
	echo ".cfg" >> .gitignore
	CLONE DOTFILES INTO A BARE REPOSITORY:
	$ git clone --bare https://github.com/chischte/dotfiles.git $HOME/git/dotfiles
	REMOVE THE STOCK CONFIG FILES
	CHECKOUT THE DOTFILE CONTENT TO THE $HOME FOLDER:
	$ dotgit checkout
	$ dotgit config --local status.showUntrackedFiles no
	...DONE.
***********************************************************************************
CONNECT TO CELLULAR NETWORK USING A SIM CARD
***********************************************************************************
	Mobile No: XXX
	PIN XXXX (disabled)
	**********************************************************************************
	INFOS FROM WINDOWS:
	Network & Internet Settings:
	yallo (HSPA)
	Manufacturer:	Dell
	Model:	DW5560 HSPA+ Mobile Broadband
	Firmware:	CXP 901 8700/1 - R3C18
	Network type:	GSM
	Data class:	GPRS; EDGE; UMTS; HSDPA; HSUPA; HSPA+
	IMEI:	XXXX
	IMSI:	XXXX
	SIM ICCID: XXXX
	Device Manger:
	DW5560 HSPA+ Mobile Broadband
	**********************************************************************************
	TO RUN IN LINUX:
	In Network Manager:
	Add Network Connection of type "mobile broadband"
	AS APN USE ANY NUMBER.
	...connect :)
*********************************************************************************
*** CAPTURE PS-3 CONTROLLER SIGNALS (Linux Mint, C++, Python)
*********************************************************************************
		check if gamepad works with: https://html5gamepad.com/

		*** C++ approach:
		>>>>check out this API!!!!!:
		https://github.com/drewnoakes/joystick/blob/master/joystick.cc
		.hh = .h = header file   >>>goes to /usr/local/include
		.cc = cpp ...goes to project


		*** Python approach:
		pip3 install inputs (installs inputs-0.5 library to capture joypad)
		run example code in eclipse:
		https://raw.githubusercontent.com/zeth/inputs/master/examples/gamepad_example.py
		works!
*********************************************************************************
*** SETTING UP A PI
*********************************************************************************
		download raspian from www.raspberrypi.org
		Raspbian Stretch with desktop and recommended software
		insert SD-Card to PC
		check where it has been mounted with lsblk
		unmount the SD card (umount /media/realslimshady/6537-6531
		unzip the downloaded image and write it on the card:

		unzip -p 2019-04-08-raspbian-stretch-full.zip | sudo dd of=/dev/sdb bs=4M status=progress conv=fsync

	  ...did not work: MAKE A BOOTABLE STICK WITH WINDOWS ISO:
		sudo dd if=Win10_1809Oct_EnglishInternational_x64.iso of=/dev/sdb bs=4M status=progress conv=fsync
*********************************************************************************
*** SHORTCUTS
*********************************************************************************
	y*** ECLIPSE SHORTCUTS
	Zeilenausrichten: Ctrl+i
	switch Editor/Console: Ctrl+F7
	Expand: Ctrl+ö (custom)
	Collapse:Ctrl+ä (custom)
	Collapse all: Ctrl+ü

	*** VIM:
	Shift-* - jump to same word! :)
	. - repeat command
	w >> forward by word
	dw - delete word forward
	b - backward by word
	r - replace one character
	R - begin replace mode	
	0 - move to beginning of current line
	$ - move to end of line
	{ - beginning of current paragraph
	} - beginning of next paragraph
	G - move t bottom of file
	gg - move to start of file 
	% . - jump to counterpart!!! [...] (...) {...}
	Ctrl+AltGr+] - jump to the ctag
	Ctrl+u >> move up half a screen
	Ctrl+d >> move down half a screen	
	ZZ = :wq
	yy - yank current line
	Ctr+o - jump to previous location						
	Ctrl+i or TAB - jump to next location
	:r file - reads file into current workspace
	:/cats - search cats ...n - next N - previous
	:g/oldtext/newtext/g - replace text
	
	***VIM splitwindow		
	:split ... :vsplit ...:	
	Ctrl+w +T - maximize active window
	Ctrl+w +q close active window
	Ctrl+w Ctrl+w - jump to different splitwindow
	Ctrl+w q - quit splitwindow
	Ctrl+w = - make all windows equal size
	
	*** FIREFOX
	Ctrl+T ...opens a new tab
	Ctrl+L ...jumps to adress bar

	*** GNOME TERMINAL
	Ctrl Page Up/Page Down >> change tab

	*** ECLIM
	:lopen >> show error list in vim/eclim
*********************************************************************************
*** ARDUINO  
*********************************************************************************
	***USING ARDUINO IDE
	*Install arduino ide:
	www.arduino.cc => download
	tar -xf arduino-1.8.9-linux64.tar.xz
	sudo mv arduino-1.8.9 /opt
	cd /opt/arduino-1.8.9
  ...change opt user to allow software installation:
  sudo chown -R $USER:$USER /opt/
	sudo chmod +x install.sh
	#ADD PATH EXPORT TO .bashrc:	export PATH="/opt/arduino-1.8.9:$PATH"
	sudo usermod -a -G tty realslimshady
	sudo usermod -a -G dialout realslimshady 
	restart ...works :) (used old bootloader for arduino nano)
	...in Arduino IDE set sketchbook location as desired (changes library location as well)
	install controllino library
	set additional boards manager URL to:
	https://raw.githubusercontent.com/CONTROLLINO-PLC/CONTROLLINO_Library/master/Boards/package_ControllinoHardware_index.json
	in boards manager install controllino boards
*********************************************************************************
*** SYSTEM SETUP STEPS / INSTALLATION AND USE OF PROGRAMS
*********************************************************************************
	...installed avucontrol for more sound settings (volume up to 150%)
	*********************************************************************************
	*** SETUP DUAL BOOT LINUX MINT / WINDOWS 10 (UEFI)
 	*********************************************************************************
		This is what worked, not sure if everything is necessary
	        (installing Windows first may be also an option to check out!)        
        	in Startup Menu (BIOS) change from BIOS to UEFI
	        deactivate Legacy support
	        Secure Boot is deactivated
	        Install linux mint standard (not "something else installation")
	        Deactivate checkbox "installation of third party software"
	        Start linux with usb stick and make linux partition smaller usin Gparted to make space for windows installation (102400MB)
	        Install Windows 
	***********************************************************************************
	Windows 10 OEM Product Key XXXX (stored on passwordmanager)
	***********************************************************************************
	        Boot with linux usb stick
	        install and run boot-repair
	        boot into linux
	        use grub-customizer to cusomize dual boot menu
	        
        	After the installation i shrunk the linux os partition to 100GB to create a separate home partition
	        the 512 GB HD is now divided as followed:
	        100GB Linux OS
	        270GB Linux HOME
	        100GB Windows

	        How to reallocate home folder:
	        https://help.ubuntu.com/community/Partitioning/Home/Moving
    
	*********************************************************************************
	*** SETUP DUAL BOOT LINUX MINT / WINDOWS 10 (legacy BIOS)
	*********************************************************************************
		...if Linux is allready installed
	    	$ sudo apt install gparted ...create partition for Windows 10
		After installing Windows 10 on a separate Primary Partition, Windows will start directly
		To enable dual boot the GRUB bootloader has to be reinstalled
		1) start ubuntu usin linux mint installer usb stick
		2) Install Boot-Repair from command line:
		$ sudo add-apt-repository ppa:yannubuntu/boot-repair && sudo apt-get update
		$ sudo apt-get install -y boot-repair && boot-repair
		3) run recommended repair, then reboot
		...voilà
		Alternatively a Boot-Repair USB-stick could be generated
		Boot order can be changed using the "Grub-Customizer"
		$ sudo add-apt-repository ppa:danielrichter2007/grub-customizer
		$ sudo apt-get update
		$ sudo apt-get install grub-customizer ...run grub-customizer


	*********************************************************************************
	***INSTALL VIM:
	*********************************************************************************
		sudo apt-get install vim
		CREATE ~/.vimrc:
		*********************************************************************************
		set autoindent " ...start next line with the same indent
		set tabstop=2
		set shiftwidth=2
		set nocompatible " eclim requirement
		filetype plugin indent on " eclim requirement
		set number " ...shows line Numbers
		" *** USE SYSTEM CLIPBOARD:
		" sudo apt get-install vim-gtk 
		set clipboard=unnamedplus
		" *** #USE CTAGS:
		" #RUN CTAGS IN WORKING DIR:
		" ctags -R
		" in vim use Ctrl+AltGr+] to jump to the tag under the cursor
		set tags=./tags; " ...start searching for the tagfile in the dir of the current file
		" *** ENABLE FOLDING:
		set foldmethod=indent
		set foldlevelstart=0 " ...the higher the value, the less folds

		let javaScript_fold=1         " JavaScript
		let perl_fold=1               " Perl
		let php_folding=1             " PHP
		let r_syntax_folding=1        " R
		let ruby_fold=1               " Ruby
		let sh_fold_enabled=1         " sh
		let vimsyn_folding='af'       " Vim script
		let xml_syntax_folding=1      " XML
		*********************************************************************************
		" *** USE SYSTEM CLIPBOARD:
		" sudo apt-get install vim-gtk 

		...USE CAPS LOCK AS 2nd ESC KEY
		~/.profile:
		setxkbmap -option caps:escape
		$ source .profile
	*********************************************************************************
	*** INSTALL git
	*********************************************************************************
		sudo apt install git
		git config --global user.email "chischte@gmx.ch"
		#SET VIM AS DEFAULT EDITOR FOR GIT:
		git config --global core.editor "vim"
	*********************************************************************************
	*** INSTALL DEFAULT JAVA 
	*********************************************************************************
        	sudo dpkg --configure -a		
	        sudo apt-get update
	        sudo apt-get upgrade
		sudo apt-get install default-jdk
		java -version shows: openjdk version "11.0.3" 2019-04-16
		
		SET JAVA HOME VARIABLE IN /etc/bash.bashrc #all users:
        	export JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64
		export PATH=$JAVA_HOME/bin:$PATH

		which java shows: /usr/lib/jvm/java-1.11.0-openjdk-amd64/bin/java
		echo $JAVA_HOME shows:/usr/lib/jvm/java-1.11.0-openjdk-amd64	

	*********************************************************************************
	*** INSTALL AND SETUP ONEDRIVE
	*********************************************************************************
        Instruction on: https://github.com/abraunegg/onedrive.git:        
        sudo apt-get update
		sudo apt install build-essential
       		sudo apt install libcurl4-openssl-dev
		sudo apt install libsqlite3-dev
		sudo apt install libnotify-dev
		sudo apt install snapd
		sudo snap install --classic dmd && sudo snap install --classic dub
		add /snap/bin to path by making an entry in bash.bashrc
		export PATH="$PATH:/snap/bin"
		cd /usr/local
		Fetch files: (will be fetched to the current directory)
		git clone https://github.com/abraunegg/onedrive.git
		cd onedrive
		sudo ./configure
		sudo make clean
        	sudo make
		sudo make install
		(was not necessary after reinstallation on newly set up flugchischte: run onedrive and follow the authentification instructions)
		create a file named sync_list in ~/.config/onedrive containing the folders to be synced
		copy the config file to ~/.config/onedrive/ and set sync_dir variable to ~/SyncBox/OneDrive
		onedrive --display-config (should now show selctive sync = true, and the correct sync_dir path)
		INITIAL SYNC:
		Consult Online Instructions to not erase everything!
		Maybee the "just download" sync is the right choice
		AFTER ADDING A NEW FOLDER TO SYNC LIST RUN:
		$ onedrive --synchronize --resync	(alias resync)
		REGULAR UPDATE SYNC:
		$ onedrive --synchronize (alias osync)
		

	*********************************************************************************
	*** INSTALL ECLIPSE 
	*********************************************************************************
		download latest eclipse released package
		select "Download Packages" from eclipse .org
		*****************************************************	
		ECLIPSE FOR JAVA (download eclipse for java developers):
		*****************************************************	
		Installed: Eclipse 2019-06-R
		eclipse-java-....tar.gz 
		move to /opt/eclipsejava
		sudo tar -zxvf eclipse....
		add alias to /etc/bash.bashrc:
		alias eclipsejava="cd /opt/eclipsejava/eclipse; ./eclipse"
		start eclipse using the alias
		select ~/eclipse-j-ws as workspace
		...to uninstall simply remove the folder
		...configure eclipse formatter (4 spaces, no tabs, 80 characters)
		INSTALL WINDOWBUILDER:
    Eclipse\Help\Install new software\"Swing Designer"
		(Windowbuilder is included)		
		ACTIVATE AUTOCOMPLETION:
		Preferences > Java > Editor > Content Assist and paste:
		ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.
		*****************************************************	
		ECLIPSE FOR C++ / PYTHON (download eclipse for C/C++ developers):
		*****************************************************	
		eclipse-cpp-....tar.gz
		move to /opt/eclipsecpp		
		sudo tar -zxvf eclipse....
		add alias to /etc/bash.bashrc:
		alias eclipsecpp=" cd /opt/eclipsecpp/eclipse ; ./eclipse"
		start eclipse using the alias
		select ~/eclipse-c-ws as workspace
		...to uninstall simply remove the folder

		INSTALL PYTHON3:
		Install PiDev in Eclipse
		sudo apt update
		sudo apt install python3-pip
		install c++ compiler:
		sudo apt-get update
		sudo apt-get install build-essential

		...to compile a cpp on command line type:
		sudo g++ -o hello hello.cpp

		*****************************************************	
		ECLIPSE FOR ARDUINO / CONTROLLINO BOARDS (sloeber) :
		*****************************************************	
		download sloeber package for linux
		http://eclipse.baeyens.it/stable.php?OS=Linux
		the package contains eclipse and sloeber arduino ide
		unpack in opt/eclipsearduino
		alias eclipsearduino=" cd /opt/eclipsearduino/sloeber ; ./sloeber-ide"
		ADD json URL FOR CONTROLLINO BOARDS:
		https://raw.githubusercontent.com/CONTROLLINO-PLC/CONTROLLINO_Library/master/Boards/package_ControllinoHardware_index.json
		IMPORT ARDUINO PROJECT FROM GIT:
		Create a new sketch (in eclipse-arduino-ws)
		Import Folder containing Arduino files (project clone in ~/git folder)

		*****************************************************	
		IMPORT EXISTING GIT-ARDUINO PROJECT TO SLOEBER
		*****************************************************
		VERSION 2 (TO BE VERIFIED)
		1) Create a new Arduino sketch (project)
		2) Uncheck "Default Location" and select the folder containing the .git repository instead
		3) Name the sketch exactly as the main ino.
		DONE!
		
		VERSION 1 (not very elegant but seems to work)
		With the following method a link will be created to the sketch files in the repository:
		1)Create a new Arduino sketch (creates a new project)
		2)Right click on the project name in the Project explorer
		Select New File / Advanced / link to file in the system /
		choose sketch file in the git folder
		repeat this step for every file
		delete the default ino
		DONE! ...an easier way would be nice, git import did not work.
		*****************************************************

	*********************************************************************************
	*** INSTALL LIBRE OFFICE
	*********************************************************************************
		sudo add-apt-repository ppa:libreoffice/ppa
		sudo apt-get update
		sudo apt-get install libreoffice
	*********************************************************************************
	*** INSTALL VIRTUALBOX AND WINDOWS
	*********************************************************************************
		INSTALL VIRTUALBOX 
		(https://lintut.com/how-to-install-virtualbox-5-2-on-linux-mint-19/)
		*********************************************************************************
		 wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -

		echo "deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian bionic contrib" | sudo tee /etc/apt/sources.list.d/virtualbox.list

		sudo apt-get update
	*********************************************************************************
		before installing o virtual machine:

		set default machine folder to ~/.virtualbox_VMs
		after guest OS installation:	
		...in menu bar click on install guest addition		
		...in windows explorer run guest addition installer AMD64
		...add shared folder
		REBOOT ...voila shared folder (containing multisim installer) should be visible
	*********************************************************************************

		create aliases in bash.bashrc
	    *********************************************************************************
		  #aliases "hi, hey and bye"
			#removed from hi hey and bye: bash ftp-pull.sh and bash ftp-push.sh

		  alias hi="
			onedrive --monitor"

		  alias hey="
		  osync"

		  alias bye="
		  osync; poweroff"

		  alias rememberer="
		  cd ~/SyncBox/OneDrive/GIT/rememberer/; vim rememberer.txt"

			alias TS="
			cd ~/SyncBox/OneDrive/AA_INFORMATIK/00_TS_INFORMATIK/"

			alias osync="
			onedrive --synchronize"

			alias todo="
			libreoffice ~/SyncBox/OneDrive/AA_INFORMATIK/00_TS_INFORMATIK/MASTER_ToDo_LIST.xlsx"
*********************************************************************************
*** FOLDERS
*********************************************************************************
	/bin #single user command binaries

	/etc #static configuration files
	/etc/opt #config files for add-on packages

	/opt #optional application software packages

	/usr #read only multi-user data
	/usr/bin #multi user command binaries

	/var #changing files as logs, spool files..-

	#FOLDER COLORS:
	Blue: Directory
	Green: Executable or recognized data file
*********************************************************************************
*** FILES
*********************************************************************************
	/etc/bash.bashrc #system wide
	~/.bashrc #initialized after .bashrc
	source...
	profile...
*********************************************************************************
*** VARIOUS WORKING COMMANDS:
*********************************************************************************
	*** LOCATE A FILE
	$locate bash.bashrc

	*** get current path print working directory:
	$echo $PWD

	*** CREATE FOLDER STRUCTURE mkdir -p
	mkdir -p /home/realslimshady/Dropbox/BKP //-p erstellt alle ordner
	cd /home/realslimshady/Dropbox/BKP
	mkdir $(date '+%Y-%m-%d-%H-%M')
	cd  "$(\ls -1dt ./*/ | head -n 1)" //wechselt ins neueste Verzeichnis


	*** DELETE FOLDER
	$sudo rm -r mydir
	#ohne Prompt:
	$sudo rm -rf mydir

	*** COPY
	$cp
	$cp -i (interactive)

	*** LIST PACKAGES:
	dpkg --list
	*** UNINSTALL:
	sudo apt-get --purge remove nameOfTheProgram
	...to remove depencies as well run:
	sudo apt-get purge --auto-remove openjdk* 

	*** START GUI VIA TERMINAL:
	Ctrl+Alt+F1
	Login
	startx

	*** login as root:
	sudo -i
*********************************************************************************
*** SETUP HaudiGaudiNetz 
*********************************************************************************
  RESET MODEM BY PRESSING 10secs RESET
  LOGIN VIA 192.168.0.1 - create dynamic ip network
  HaudiGaudiNetz
  ClaudiGaudi0815
  Login to HaudiGaudiNetz go to 192.168.0.1
  Connect to erk58418 (via universal repeater)
  PASS=XXXX (stored on passwordmanager)
*********************************************************************************
*** INSTALL WIRESHARK
*********************************************************************************
	sudo add-apt-repository ppa:pi-rho/security
	sudo apt-get update
	sudo apt-get install wireshark
	Couldn't run /usr/bin/dumpcap in child process: Permission denied
	...works after short command line entry and restart



*********************************************************************************
*********************************************************************************
*********************************************************************************
ARCHIVE / OLD UNUSED STUFF
*********************************************************************************
*********************************************************************************
*********************************************************************************
	*********************************************************************************
	*** INSTALL WINE  
	*********************************************************************************
		sudo dpkg --add-architecture i386
		wget -nc https://dl.winehq.org/wine-builds/winehq.key
		sudo apt-key add winehq.key
		sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ cosmic main'
		sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main'
		sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ xenial main'
		sudo apt-get update
		sudo apt-get install --install-recommends winehq-stable	
	*********************************************************************************
	PREVENT EXTERNAL SCREEN FROM TURNING OF ON DOCKINGSTSTION:
	*********************************************************************************
		sudo vim /etc/UPower/UPower.conf
		change ignoreLid from false to true
		ignoreLid=true
		...sudo service upower restart (or reboot)
	*********************************************************************************
	*** INSTALL ECLIM / 
	*********************************************************************************
		*** DOWNLOAD AND INSTALL ECLIPSE PHOTON (RELEASED VERSION)
		#https://www.eclipse.org/downloads/packages/release/photon/
		#DOWNLOAD: eclipse-jee-photon-R-linux-gtk-x86_64.tar.gz
		#move to /opt/
		sudo tar -zxvf eclipse-jee-photon-R...
		#ADD PATH TO /etc/environment TO MAKE IT RUNABLE FROM ANYWHERE:
		export PATH="/opt/eclipse:$PATH"
		#ADD LINE TO /etc/bash.bashrc:
		source /etc/environment 

		*** #NOT SURE IF NECESSARY:
		... uninstall gcc via software manager
		... reinstall with sudo apt install gcc

		*** INSTALL libc6 C devlopment stuff
		sudo apt install libc6-dev

		*** INSTALL JDK 1.8 (perhaps a higher version would work too)
		#install openjdk-8-jdk via software manager
		#not sure if necessary:
		...sudo update-alternatives --config java > select ...java-8-openjdk-amd64/jre/bin/java
		...3sudo update-alternatives --config javac > select ...java-8-openjdk-amd64/bin/javac
		#SET JAVA HOME VARIABLE IN /etc/bash.bashrc #all users:
		export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64
		export PATH=$JAVA_HOME/bin:$PATH
		#java -version shows: openjdk version "1.8.0_191"
		#echo $JAVA_HOME shows:/usr/lib/jvm/java-1.8-openjdk-amd64
		#which java shows:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java 

		*** DOWNLOAD AND INSTALL ECLIM
		#DOWNLOAD: eclim_2.8.0.bin
		chmod +x eclim_2.8.0.bin 
		#RUN INSTALLER AND INSTALL
		#ADD PATH EXPORT TO /etv/bash.bashrc TO FIND ECLIMD:
		export PATH="/home/realslimshady/.eclipse/org.eclipse.platform_4.8.0_1473617060_linux_gtk_x86_64/plugins/org.eclim_2.8.0/bin:$PATH"

		***OPTIONAL: CHANGE ECLIM WORKSPACE
		create ~/.eclimrc file and add
		-Dosgi.instance.area.default=@user.home/_trash/eclipse-workspace
	*********************************************************************************
	*** ADDITIONAL / OPTIONAL STEPS:
	*********************************************************************************
		...change opt user to allow software installation:
		sudo chown -R $USER:$USER /opt/
		*********************************************************************************
	*** CREATE ECLIM JAVA PROJECT
	*********************************************************************************
		start eclimd
		:ProjectCreate /path/to/my_project -n java
		vim . classpath :NewSrcEntry src/... if necessary
		in :ProjectSettings set the name of the main class
		run mainclass with :Java
		run other method with :Java %
		use aut code completion with Ctrl+x and Ctrl+u  and n
	*********************************************************************************
	*** INSTALL NETBEANS
	*********************************************************************************
		...10 works on flugchischte but did not work on bodechischte
		...version 9 works on bodechischte
		download incubating-netbeans-10.0-source.zip from netbeans
		unzip and erase zip
		move netbeans to /opt/
		add path to /etc/bash.bashrc:
		export PATH="/opt/netbeans/bin:$PATH"
	*********************************************************************************
	*** SYNCHRONIZE FTP / aliases "hi, hey and bye"
	*********************************************************************************
		sudo apt-get install lftp
		create bash script /usr/local/bin/ftp-push.sh:
			***********************************************************************************
		#!/bin/bash
		#create a ZIP of the current GIT folder
		cd ~/SyncBox/
		zip -r GIT.zip GIT
		#move the zipped folder to the emptied transferfolder
		rm -rf ~/.ftptransfer
		mkdir  ~/.ftptransfer
		mv GIT.zip ~/.ftptransfer/
		#upload the new zipped GIT folder
		HOST='0m2pd.ftp.infomaniak.com'
		USER='0m2pd_git'
		PASS=XXXX (stored on passwordmanager)
		TARGETFOLDER='/'
		SOURCEFOLDER='~/.ftptransfer/'
		lftp -f " 
		open $HOST
		user $USER $PASS
		lcd $SOURCEFOLDER
		mirror --reverse --delete --verbose $SOURCEFOLDER $TARGETFOLDER
		bye
		"
		#delete the local GIT.zip archive
		#rm ~/.ftptransfer/GIT.zip
		***********************************************************************************
		create bash script /usr/local/bin/ftp-pull.sh:
		***********************************************************************************
		#!/bin/bash
		#delete previous GIT.zip
		rm -rf ~/.ftptransfer/GIT.zip

		#download latest GIT.zip from FTP
		HOST='0m2pd.ftp.infomaniak.com'
		USER='0m2pd_git'
		PASS=XXXX (stored on passwordmanager)
		TARGETFOLDER='~/.ftptransfer'
		SOURCEFOLDER='/'

		lftp -f " 
		open $HOST
		user $USER $PASS
		lcd $SOURCEFOLDER
		mirror --delete --verbose $SOURCEFOLDER $TARGETFOLDER
		bye
		"
		#unzip downloaded GIT.zip
		cd ~/.ftptransfer
		unzip GIT.zip
		#move local GIT to a save location in case of anything goes wrong
		rm -rf previousGIT
		mkdir previousGIT
		mv ~/SyncBox/GIT/ ~/.ftptransfer/previousGIT/
		#move newly downloaded and unzipped GIT to the correct location
		mv ~/.ftptransfer/GIT ~/SyncBox/GIT
		#delete zipped archive
		#rm ~/.ftptransfer/GIT.zip
		***********************************************************************************
	*********************************************************************************
	*** WLAN LOGIN STEPS
	*********************************************************************************
		*** GET INTERFACE NAME
		ifconfig -a ...shows interface name
		...name of the wireless interface is wlp2s0 (not wlan0)
	
		*** SHOW AVAILABLE NETWORKS
		nmcli dev wifi
		nmcli dev wifi rescan ...run a rescan
		*** NOT WORKING !!!: CONNECT TO A WIFI WPA NETWORK
		linuxcommando.blogspot.com/2013/10/how-to-connect-to-wpawpa2-wifi-network.html
		sudo apt-get install wpasupplicant ...was already installed
		sudo -s ...change to root user
		sudo wpa_passphrase AndroidAP >> /etc/wpa_supplicant.conf
		...type in passphrase (will be stored in "/etc/wpa_supplicant.conf
		sudo wpa_supplicant -B -D wext -i wlp2s0 -c /etc/wpa_supplicant.conf
		error: ioctl[SIOCSIWENCODEEXT]: Invalid argument
	*********************************************************************************
	*** COMBINING NETBEANS AND ECLIM
	*********************************************************************************
		Create Netbeans Project
		Close Netbeans
		Start Eclim Server
		Vim :ProjectCreate same/path/ -n java
		...Edit GUI.java on Netbeans
		...chekcout if editing GUI on vim is also permissible
		...Edit other .javas with vim or netbeans.
	*********************************************************************************
	***USING VIM TO COMPILE ARDUINO CODE
	*********************************************************************************
		https://hardwarefun.com/tutorials/compiling-arduino-sketches-using-makefile
		git clone https://github.com/sudar/Arduino-Makefile
		directory: ~/GIT/Arduino/Arduino-Makefile
		create makefile: touch ~/GIT/Arduino/Projects/sketch_xy/Makefile ...add:
		*********************************************************************************
		ARDUINO_DIR = /opt/arduino-1.8.8
		ARDMK_DIR = /home/realslimshady/GIT/Arduino/Arduino-Makefile	
		BOARD_TAG = nano
		include $(ARDMK_DIR)/Arduino.mk
		*********************************************************************************
		:make ...gives error in vim,  no error in command line
		:make upload ...gives error anyway

		sudo apt-get install libdevice-serialport-perl
		sudo apt-get install libyaml-perl
		...added to Makefile:
		AVR_TOOLS_DIR = /opt/arduino-1.8.8/hardware/tools/avr
		ARDUINO_PORT = /dev/ttyACM3
		
		:!make show_boards ...shows the boards list
		
		...TODO: use make -d ..."debug"
		...TODO: study installation instructions: https://github.com/sudar/Arduino-Makefile
		...TODO: study instructions in makefile
		...TODO when succesfully uploaded to nano or uno, try to make contrlino work as well
		...TODO: when upload is working, implement other tipps from here as well
		https://collectiveidea.com/blog/archives/2017/04/05/arduino-programming-in-vim
	
		*** USING ECLIPSE
		Install Eclipse C++ IDE for Arduino 3.0 using the Eclipse Marketplace
	*********************************************************************************
	*** CONNECT STM CHIP  
	*********************************************************************************
		dmesg | grep usb ...lists usb devices
		
		*INSTALL STM32CubeMX
		Download Version 5.01 from ST.com
		mv en.stm32cubemx.zip to /opt/
		sudo unzip en.stm32cubemx.zip 
		...change opt user
		sudo chown -R $USER:$USER /opt/
		./SetupSTM32CubeMX-5.0.1.linux 
		...the installer launches
		...choose installation path /opt/STM32CubeMX
		...start with ./
		...when asked: use system proxysettings
		...how and what to upload ???
